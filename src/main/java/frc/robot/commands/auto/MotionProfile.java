package frc.robot.commands.auto;


import java.util.List;

import com.ctre.phoenix.motion.BufferedTrajectoryPointStream;
import com.ctre.phoenix.motion.TrajectoryPoint;

import edu.wpi.first.wpilibj.trajectory.Trajectory;
import edu.wpi.first.wpilibj.trajectory.Trajectory.State;
import frc.robot.Constants.TrajectoryConstants;

public class MotionProfile {
	public BufferedTrajectoryPointStream _bufferedStream;
	public Trajectory trajectory = new Trajectory((List<State>) _bufferedStream);
	public static final int kNumPoints =185;		
	// Position (rotations),	Velocity (RPM),	Duration (ms)
	public static double [][]profile = new double[][]{		
	{0,	0	,10},
	{0.000119047619047619,	1.428571429	,10},
	{0.000535714285714286,	3.571428571	,10},
	{0.00136904761904762,	6.428571429	,10},
	{0.00273809523809524,	10	,10},
	{0.00476190476190476,	14.28571429	,10},
	{0.00755952380952381,	19.28571429	,10},
	{0.01125,	25	,10},
	{0.015952380952381,	31.42857143	,10},
	{0.0217857142857143,	38.57142857	,10},
	{0.0288690476190476,	46.42857143	,10},
	{0.0373214285714286,	55	,10},
	{0.0472619047619048,	64.28571429	,10},
	{0.0588095238095238,	74.28571429	,10},
	{0.0720833333333333,	85	,10},
	{0.087202380952381,	96.42857143	,10},
	{0.104285714285714,	108.5714286	,10},
	{0.123452380952381,	121.4285714	,10},
	{0.144821428571429,	135	,10},
	{0.168511904761905,	149.2857143	,10},
	{0.194642857142857,	164.2857143	,10},
	{0.22327380952381,	179.2857143	,10},
	{0.254404761904762,	194.2857143	,10},
	{0.288035714285714,	209.2857143	,10},
	{0.324166666666667,	224.2857143	,10},
	{0.362797619047619,	239.2857143	,10},
	{0.403928571428571,	254.2857143	,10},
	{0.447559523809524,	269.2857143	,10},
	{0.493690476190476,	284.2857143	,10},
	{0.542321428571429,	299.2857143	,10},
	{0.593452380952381,	314.2857143	,10},
	{0.647083333333334,	329.2857143	,10},
	{0.703214285714286,	344.2857143	,10},
	{0.761845238095238,	359.2857143	,10},
	{0.822976190476191,	374.2857143	,10},
	{0.886607142857143,	389.2857143	,10},
	{0.952738095238096,	404.2857143	,10},
	{1.02136904761905,	419.2857143	,10},
	{1.0925,	434.2857143	,10},
	{1.16613095238095,	449.2857143	,10},
	{1.24226190476191,	464.2857143	,10},
	{1.32077380952381,	477.8571429	,10},
	{1.4014880952381,	490.7142857	,10},
	{1.48428571428571,	502.8571429	,10},
	{1.56904761904762,	514.2857143	,10},
	{1.65565476190476,	525	,10},
	{1.7439880952381,	535	,10},
	{1.83392857142857,	544.2857143	,10},
	{1.92535714285714,	552.8571429	,10},
	{2.01815476190476,	560.7142857	,10},
	{2.11220238095238,	567.8571429	,10},
	{2.20738095238095,	574.2857143	,10},
	{2.30357142857143,	580	,10},
	{2.40065476190476,	585	,10},
	{2.49851190476191,	589.2857143	,10},
	{2.59702380952381,	592.8571429	,10},
	{2.69607142857143,	595.7142857	,10},
	{2.79553571428572,	597.8571429	,10},
	{2.89529761904762,	599.2857143	,10},
	{2.9952380952381,	600	,10},
	{3.0952380952381,	600	,10},
	{3.1952380952381,	600	,10},
	{3.2952380952381,	600	,10},
	{3.3952380952381,	600	,10},
	{3.4952380952381,	600	,10},
	{3.5952380952381,	600	,10},
	{3.6952380952381,	600	,10},
	{3.7952380952381,	600	,10},
	{3.8952380952381,	600	,10},
	{3.9952380952381,	600	,10},
	{4.0952380952381,	600	,10},
	{4.1952380952381,	600	,10},
	{4.2952380952381,	600	,10},
	{4.3952380952381,	600	,10},
	{4.4952380952381,	600	,10},
	{4.5952380952381,	600	,10},
	{4.69523809523809,	600	,10},
	{4.79523809523809,	600	,10},
	{4.89523809523809,	600	,10},
	{4.99523809523809,	600	,10},
	{5.09523809523809,	600	,10},
	{5.19523809523809,	600	,10},
	{5.29523809523809,	600	,10},
	{5.39523809523809,	600	,10},
	{5.49523809523809,	600	,10},
	{5.59523809523809,	600	,10},
	{5.69523809523809,	600	,10},
	{5.79523809523809,	600	,10},
	{5.89523809523809,	600	,10},
	{5.99523809523809,	600	,10},
	{6.09523809523809,	600	,10},
	{6.19523809523809,	600	,10},
	{6.29523809523809,	600	,10},
	{6.39523809523809,	600	,10},
	{6.49523809523809,	600	,10},
	{6.59523809523809,	600	,10},
	{6.69523809523809,	600	,10},
	{6.79523809523809,	600	,10},
	{6.89523809523809,	600	,10},
	{6.99523809523809,	600	,10},
	{7.09523809523809,	600	,10},
	{7.19523809523809,	600	,10},
	{7.29523809523809,	600	,10},
	{7.39523809523809,	600	,10},
	{7.49523809523809,	600	,10},
	{7.59523809523808,	600	,10},
	{7.69523809523808,	600	,10},
	{7.79523809523808,	600	,10},
	{7.89523809523808,	600	,10},
	{7.99523809523808,	600	,10},
	{8.09523809523808,	600	,10},
	{8.19523809523808,	600	,10},
	{8.29523809523808,	600	,10},
	{8.39523809523808,	600	,10},
	{8.49523809523808,	600	,10},
	{8.59523809523808,	600	,10},
	{8.69523809523808,	600	,10},
	{8.79523809523808,	600	,10},
	{8.89523809523808,	600	,10},
	{8.99523809523808,	600	,10},
	{9.09523809523808,	600	,10},
	{9.19523809523808,	600	,10},
	{9.29523809523808,	600	,10},
	{9.39523809523808,	600	,10},
	{9.49523809523808,	600	,10},
	{9.59523809523808,	600	,10},
	{9.69511904761903,	598.5714286	,10},
	{9.79470238095236,	596.4285714	,10},
	{9.89386904761903,	593.5714286	,10},
	{9.99249999999998,	590	,10},
	{10.0904761904762,	585.7142857	,10},
	{10.1876785714286,	580.7142857	,10},
	{10.2839880952381,	575	,10},
	{10.3792857142857,	568.5714286	,10},
	{10.4734523809524,	561.4285714	,10},
	{10.566369047619,	553.5714286	,10},
	{10.6579166666666,	545	,10},
	{10.7479761904762,	535.7142857	,10},
	{10.8364285714286,	525.7142857	,10},
	{10.9231547619047,	515	,10},
	{11.0080357142857,	503.5714286	,10},
	{11.0909523809524,	491.4285714	,10},
	{11.1717857142857,	478.5714286	,10},
	{11.2504166666666,	465	,10},
	{11.3267261904762,	450.7142857	,10},
	{11.4005952380952,	435.7142857	,10},
	{11.4719642857143,	420.7142857	,10},
	{11.5408333333333,	405.7142857	,10},
	{11.6072023809524,	390.7142857	,10},
	{11.6710714285714,	375.7142857	,10},
	{11.7324404761905,	360.7142857	,10},
	{11.7913095238095,	345.7142857	,10},
	{11.8476785714286,	330.7142857	,10},
	{11.9015476190476,	315.7142857	,10},
	{11.9529166666666,	300.7142857	,10},
	{12.0017857142857,	285.7142857	,10},
	{12.0481547619047,	270.7142857	,10},
	{12.0920238095238,	255.7142857	,10},
	{12.1333928571428,	240.7142857	,10},
	{12.1722619047619,	225.7142857	,10},
	{12.2086309523809,	210.7142857	,10},
	{12.2425,	195.7142857	,10},
	{12.273869047619,	180.7142857	,10},
	{12.3027380952381,	165.7142857	,10},
	{12.3291071428571,	150.7142857	,10},
	{12.3529761904762,	135.7142857	,10},
	{12.3744642857143,	122.1428571	,10},
	{12.39375,	109.2857143	,10},
	{12.4109523809524,	97.14285714	,10},
	{12.4261904761905,	85.71428571	,10},
	{12.4395833333333,	75	,10},
	{12.45125,	65	,10},
	{12.4613095238095,	55.71428571	,10},
	{12.4698809523809,	47.14285714	,10},
	{12.4770833333333,	39.28571429	,10},
	{12.4830357142857,	32.14285714	,10},
	{12.4878571428571,	25.71428571	,10},
	{12.4916666666666,	20	,10},
	{12.4945833333333,	15	,10},
	{12.4967261904762,	10.71428571	,10},
	{12.4982142857143,	7.142857143	,10},
	{12.4991666666666,	4.285714286	,10},
	{12.4997023809524,	2.142857143	,10},
	{12.4999404761905,	0.7142857143	,10},
    {12.5,	0	,10}
	};
	public void plotPoints() {
		for (int i = 0; i < kNumPoints; ++i) {
			TrajectoryPoint point = new TrajectoryPoint();
			double positionRot = profile[i][0];
			double velocityRPM = profile[i][1];
			int durationMilliseconds = (int) profile[i][2];
			double direction = velocityRPM >= 0 ? +1 : -1;
			/* for each point, fill our structure and pass it to API */
			point.timeDur = durationMilliseconds;
			point.position = direction * positionRot * TrajectoryConstants.kSensorUnitsPerRotation;           // Convert Revolutions to Units
			point.velocity = direction * velocityRPM * TrajectoryConstants.kSensorUnitsPerRotation / 600.0;   // Convert RPM to Units/100ms
			point.auxiliaryPos = 0;
			point.auxiliaryVel = 0;
			point.profileSlotSelect0 = TrajectoryConstants.kPrimaryPIDSlot; /* which set of gains would you like to use [0,3]? */
			point.profileSlotSelect1 = 0; /* auxiliary PID [0,1], leave zero */
			point.zeroPos = (i == 0); /* set this to true on the first point */
			point.isLastPoint = ((i + 1) == kNumPoints); /* set this to true on the last point */
			point.arbFeedFwd = 0; /* you can add a constant offset to add to PID[0] output here */

			_bufferedStream.Write(point);
		}
	}
}			